-- fast and dirty port from pico-8
require "tiny"
require "std"
local snd = require "sfx"
mixer.volume(1)
border(0)

function cos(a)
  return math.cos(a*math.pi*2)
end

function sin(a)
  a = math.sin(a*math.pi*2)
  return a == 0 and 0 or -a
end

gfx.win(128, 128)

local flr = floor
local tm = 0

function rnd(n)
  return math.random() * n
end

local __voices__ = [[
voice engine
box synth
# synth
volume 0.25
mode rnoise
amp 0
freq_mul 1
width 20000
offset 10000

attack 0.01
decay 0.5
sustain 0.5
release 0.1
set_sustain 1

set_glide 0
glide_rate 0

lfo_func 0 seq
lfo_freq 0 100
lfo_low 0 0
lfo_high 0 1
lfo_set_loop 0 1
lfo_set_reset 0 1
lfo_assign 0 amp

lfo_seq_pos 0 0
lfo_seq_val 0 1

lfo_seq_size 0 10
lfo_set_lin_seq 0 1

voice boom
box synth
# synth
volume 0.6
mode noise
amp 1
freq_mul 0
width 3
offset 0.5
attack 0.01
decay 0.1
sustain 0.1
release 0.1
set_sustain 0
set_glide 0
glide_rate 0
lfo_func 0 triangle
lfo_freq 0 1.5
lfo_low 0 13
lfo_high 0 1
lfo_set_loop 0 1
lfo_set_reset 0 1
lfo_assign 0 freq_mul

voice flash
box synth
# synth
volume 0.25
mode rnoise
amp 1
freq_mul 1
width 3000
offset 3000
attack 0.01
decay 0.1
sustain 1
release 1
set_sustain 0
set_glide 0
glide_rate 0
lfo_func 0 triangle
lfo_freq 0 1.5
lfo_low 0 2000
lfo_high 0 1000
lfo_set_loop 0 1
lfo_set_reset 0 1
lfo_assign 0 freq

voice water
box synth
# synth
volume 0.5
mode rnoise
amp 1
freq_mul 1
width 20000
offset 0
attack 0.01
decay 0.05
sustain 0.7
release 0.9
set_sustain 0
set_glide 0
glide_rate 0
lfo_func 0 triangle
lfo_freq 0 1
lfo_low 0 200000
lfo_high 0 30000
lfo_set_loop 0 1
lfo_set_reset 0 1
lfo_assign 0 offset

voice square
box synth
# synth
volume 0.5
mode square

amp 1
freq_mul 1
width 0
offset 3.5

attack 0.01
decay 0.1
sustain 0.5
release 0.01
set_sustain 1

lfo_func 0 triangle
lfo_freq 0 6
lfo_low 0 -0.01
lfo_high 0 0.01
lfo_set_loop 0 1
lfo_assign 0 freq_mul

lfo_func 1 saw
lfo_freq 1 35
lfo_low 1 0.6
lfo_high 1 0.5
lfo_set_loop 1 0
lfo_assign 1 width

voice boom2
box synth
# synth
volume 0.1
mode rnoise
amp 1
freq_mul 0
width 20000
offset 10000
attack 0.01
decay 0.1
sustain 0.3
release 0.2
set_sustain 0
set_glide 0
glide_rate 0
lfo_func 0 saw
lfo_freq 0 2
lfo_low 0 3
lfo_high 0 0
lfo_set_loop 0 1
lfo_set_reset 0 1
lfo_assign 0 amp

voice takedown
box synth
# synth
volume 0.5
mode saw
amp 1
freq_mul 1
width 0.5
offset 0.5
attack 0.01
decay 0.01
sustain 0.4
release 0.1
set_sustain 0
set_glide 0
glide_rate 0
lfo_func 0 saw
lfo_freq 0 10
lfo_low 0 200
lfo_high 0 800
lfo_set_loop 0 0
lfo_set_reset 0 1
lfo_assign 0 freq

lfo_func 1 sin
lfo_freq 1 100
lfo_low 1 0
lfo_high 1 0.5
lfo_assign 1 freq_mul

voice violin
box synth
# synth
volume 0.1
mode saw
amp 1
freq_mul 1
width 0.75
offset 0.5

attack 0.5
decay 0.2
sustain 0.5
release 0.2
set_sustain 1

set_glide 0
glide_rate 0

lfo_func 0 triangle
lfo_freq 0 5
lfo_low 0 -0.007
lfo_high 0 0.007
lfo_set_loop 0 1
lfo_set_reset 0 1
lfo_assign 0 freq_mul

lfo_seq_pos 0 0
lfo_seq_val 0 0
lfo_seq_size 0 0
lfo_set_lin_seq 0 0

box delay
# delay
volume 1
time 0.3
level 0.1
feedback 0.2

voice bass
box synth
freq_mul 0.5
mode square
width 0
decay 0.2
sustain 0
release 0.01
volume 0.5
lfo_assign 0 freq
lfo_func 0 saw
lfo_freq 0 15
lfo_low 0 100
lfo_high 0 -100
lfo_set_loop 0 0
lfo_assign 1 width
lfo_func 1 saw
lfo_freq 1 15
lfo_low 1 0.5
lfo_high 1 -0.5
lfo_set_loop 1 0

voice snare
box synth
mode sin_rlnoise
amp 10000
width 10000
offset 0
freq_mul 0.3
decay 0.13
sustain 0
release 0
lfo_assign 0 freq
lfo_func 0 saw
lfo_freq 0 5
lfo_low 0 120
lfo_high 0 0
lfo_set_loop 0 0
lfo_assign 1 offset
lfo_func 1 saw
lfo_freq 1 5
lfo_low 1 10000
lfo_high 1 5000
lfo_set_loop 1 0

voice zip
box synth
# synth
volume 0.5
mode saw

amp 1
freq_mul 1
width 0.9
offset 0

attack 0.01
decay 0.1
sustain 0.5
release 0.001
set_sustain 0

lfo_func 0 saw
lfo_freq 0 8
lfo_low 0 0
lfo_high 0 -260
lfo_set_loop 0 0
lfo_assign 0 freq

voice saw
box synth
# synth
volume 0.5
mode sin
amp 1
freq_mul 1
width 0.5
offset 0.5
attack 0.01
decay 0.1
sustain 0.5
release 0.3
set_sustain 0
set_glide 0
glide_rate 0
lfo_func 0 zero
lfo_freq 0 0
lfo_low 0 0
lfo_high 0 0
lfo_set_loop 0 1
lfo_set_reset 0 1
lfo_assign 0 amp
lfo_seq_pos 0 0
lfo_seq_val 0 0
lfo_seq_size 0 0
lfo_set_lin_seq 0 0
]]

snd.voices(__voices__)

local over_mus = [[
@temp 12
@volume -1 0.5
@voice 1 saw
a-2 b6
g-2 b6
f-2 b6
g-2 b6
f-2 b6
e-2 b6
f-2 b6
e-2 b6
d-2 b6
c-2 b6
... b6
... b6
... b6
]]

mixer.voices(__voices__)

local __spr__ = [[
-123456789abcdef
--------------------------------------------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------------------5---
-----------------------------------d------------8-d---------------------------------------------------------36-------------555--
----------36----8888------------88--d----------88-f4-------8888888888888-88888888888888---8888888888888----3e6----88------56865-
----------366---2c2--d---------88-ff4----------8-2ff-------66-2--cc--2------26-cc--2--------2--ccc--2------3ee6d--288-----56765-
----------3ee6662626f4----------262ff----------c2628------ee662666fd2------e226ffd22---------2efdfe2-------2666662c-2-d----676--
-----------666662626f-----6----6262f-----------6628e-------6666266f4--------626ff42----------2-f4f-2----------6662626fd----95a--
--66-------2-dde888f-----366-666688-----------6668e-2-------2d8888ff88----88888eff8888-----8888efe8888----------88626f4---------
--776-------------2------3ee666688-2---------666d--292----------2-2-----------2---2-----------2---2--------------886f-----------
--7776-----------292------666dd---292-----36ee6d----2----------29292---------29--29-----------9---9---------------2---------5---
-67776------------2--------2-------2------36e6------------------2-2-----------2---2-----------2---2--------------292-------555--
-777776------------------------------------362--------------------------------------------------------------------2-------56865-
-777777------------------------------------------------------------------------------------------------------------------5-676-5
67777776-------------------------------------------------------------------------------------------------------------------676--
67777776-------------------------------------------------------------------------------------------------------------------a59--
--------------------------------------------------------------------------------------------------------------------------------
55555555------------------------------------------------------------------------------------------------------------------------
55555555------------------------------------------------------------------------------------------------------------------------
66666666----------------------------------------8-----------------------------------------------------------36------------------
77777777--36----8888------------88-------------88-f4-------8888888888888-88888888888888---8888888888888----3e6----88------------
77777777--366---2c2------------88-ff4----------8-2ffd------66-2--cc--2------26-cc--2--------2--ccc--2------3ee6d--288-----------
77777777--3ee6662626f-----------262ffd---------c2628------ee662666ff2------e226fff22---------2efffe2-------2666662c-2-----------
77777777---666662626f4----6----6262f-d---------6628e-------6666266f4--------626ff42----------2-f4f-2----------6662626f----------
--7777-----2-dde888f-d---366-666688-----------6668e-2-------2d8888fd88----88888efd8888-----8888ede8888----------88626f4-33333311
-776677-----------2------3ee666688-2---------666d--292----------2-2-----------2---2-----------2---2--------------886f-d-44444431
76262277---------292------666dd---292-----36ee6d----2----------29292---------29--29-----------9---9---------------2--d--44444443
74366367----------2--------2-------2------36e6------------------2-2-----------2---2-----------2---2--------------292----44444443
62555227-----------------------------------362--------------------------------------------------------------------2-----44444443
42555227----------------------------------------------------------------------------------------------------------------44444443
42555224----------------------------------------------------------------------------------------------------------------44444443
42555224----------------------------------------------------------------------------------------------------------------44444443
---------------------------88-6-abcbeb8b----bb------3-------------333333333333-----44-------4------2-------f-------------6666666
---33------------5-5------88887-bbbbbbbb---b4bb----333--55555555-3bbbbbbbbbbbb3---4224-----88-----727-----1d1-------3---66767666
--336-------------5--5-5-888888-bbbbbbbb--4b44b----333--555555553bbbbbbbbbbbbbb3-422224---884-----727-----1f1------b3b--67777767
--6ee-----------------5-88888888bbbbbbbb--b44bb---33333-33333333bbbbbbbbbbbbbbbb44333344--884----77277----888------33---67777777
--26e6------------------4554d6d4bbbbbbbb--bb4b4----333--bbbbbbbbbbbbbbbbbbbbbbbb42555224--ee4----772777---9f6-----b33---67777777
----666-----------------4554d6d4bbbbbbbb---b44----33333-bbbbbbbbbbbbbbbbbbbbbbbb42555224--e-4---77-2------9f6------b3---67777777
----d666c88---------5-5-4554d6d4bbbbbbbb----4------333--bbbbbbbbbbbbbbbbbbbbbbbb42555224----4---22222222--9f6------33b--67777777
-----d662-88---------5--45544444bbbbbbbb----4-------4---bbbbbbbbbbbbbbbbbbbbbbbb42555224----4----444444---9f6------b3---67777777
------8262f-----------------------33333-3--------------333333333bbbbbbbb11116611---88-6-------------4-----9f6---9--------------9
-------82ff6------5--------------3bbbbb3b33----------33bbbbbbbbbbbbbbbbb11111111--84487------------e8-----9f6---a99----------99a
------2-6f4------5-5--5---------3bbbbbbbbbb3--------3bbbbbbbbbbbbbbbbbbb11611111-844448----------8884-----9f6---aaa9--------9aaa
-----292-------------5-5--------bbbbbbbbbbbb3------3bbbbbbbbbbbbbbbbbbbb1111111184bbbb48--------e88e4-----9f6---aaaa9------9aaaa
------2-------------------------bbbbbbbbbbbbb3----3bbbbbbbbbbbbbbbbbbbbb1111111144d6dd44---------e--4-----9f6---aaaaa9----9aaaaa
--------------------------------bbbbbbbbbbbbb3----3bbbbbbbbbbbbbbbbbbbbb1111111144d6dd4442424242----4-----9f6---aaaaa9----9aaaaa
---------------------5----------bbbbbbbbbbbbbb3--3bbbbbbbbbbbbbbbbbbbbbb1111111144d6dd4442424242----4-----9f6---aaaaaa9--9aaaaaa
--------------------5-5---------bbbbbbbbbbbbbbb33bbbbbbbbbbbbbbbbbbbbbbb111111114444444444444444----4-----9f6---aaaaaaa99aaaaaaa
--------------------------------------------------------7777777744444444bbbbbbbbbbbbbbbbbbbbbbbb3333331111333333aaaaaaaa9a9a9a9a
---33---------------------------------------------------77777777444444444bbb4bbbbb4b4bbbbbb4b4bbbbbbbb3113bbbbbbaaaaaaaaaaaaaaaa
--336---------------94----88------36e-------2------1----777777774444444444b444b4bb4444b44b4444bbbbbbbbb33bbbbbbbaaaaaaaaaaaaaaaa
--6ee--------------994-----83-----33e------292----d3d---777777774444444444444444bb444444444444bbbbbbbbb33bbbbbbbaaaaaaaaaaaaaaaa
--26e6------------999------883-----332------2------d55--777777774444444444444444b44444444444444bbbbbbbb33bbbbbbbaaaaaaaaaaaaaaaa
----666-----------99--------88----------------------5---777777774444444444444444b44444444444444bbbbbbbb33bbbbbbbaaaaaaaaaaaaaaaa
----d666c88---------------------------------------------777777774444444444444444b44444444444444bbbbbbbb33bbbbbbbaaaaaaaaaaaaaaaa
-----d662-88--------------------------------------------777777774444444444444444b44444444444444bbbbbbbb33bbbbbbbaaaaaaaaaaaaaaaa
------8262f-------------11333333---9----16611111--------66666666-------33-------33333333443333343333334444333333119a9a9a9a9a9a11
-------82ff1----5555555513444444--9a9---11111111--------76777667-----334433-----4444444443bbbbb3bbbbbb3443bbbbbb13aaaaaaaaaaaa31
------2-6f4-----5555555534444444-9a7a9--11111611--------77777767----34444443----444444443bbbbbbbbbbbbbb33bbbbbbb3aaaaaaaaaaaaaa3
-----292-6------9a9a9a9a34444444--9a9---11111111--------77777777---3444444443---44444444bbbbbbbbbbbbbbbbbbbbbbbb3aaaaaaaaaaaaaa3
------2---------aaaaaaaa34444444--996---11111111---44---77777777--344444444443--44444444bbbbbbbbbbbbbbbbbbbbbbbb3aaaaaaaaaaaaaa3
----------------aaaaaaaa34444444--9f6---11111111--4114--77777777--344444444443--44444444bbbbbbbbbbbbbbbbbbbbbbbb3aaaaaaaaaaaaaa3
----------------aaaaaaaa34444444--9f6---11111111-441544-77777777-34444444444443-44444444bbbbbbbbbbbbbbbbbbbbbbbb3aaaaaaaaaaaaaa3
----------------aaaaaaaa34444444--9f6---11111111--4154--77777777344444444444444344444444bbbbbbbbbbbbbbbbbbbbbbbb3aaaaaaaaaaaaaa3
d77777777777777d6666666----565-----7f-----9f6---77777776----------88888188888188881--8881-88881-881---88881881-881888881--------
d77777777777777d66676766---665--88888888--9f6---7777776755555555-881-881881---881881881881881881881--881881881-881881-----a9a9--
d77777777777777d76777776---565--88888888--9f6---7777767755555555-881-881881---881881881881881881881--881881888-881881----a9a9a9-
d77777777777777d77777776---665--eee5deee--9f6---7777677733333333-888888188881-88881-88188188881-881--88888188188818888--a9a9a9a9
d77777777777777d77777776---565-----6d-----9f6---7776777744444444-881-881881---881881881881881---881--881881881-881881---99999999
d77777777777777d77777776---665-----dd-----9f6---7767777744444444-331-331991---ff1ff1bb1bb1dd1---661--991991ee1-ee1331---aaa2aa99
d77777777777777d77777776---565-----38-----888---7677777744444444-331-331991---ff1ff1bb1bb1dd1---661--991991ee1-ee1331---2aa2a992
d77777777777777d77777776---665----8388----888---6777777744444444-331-331999991ff1ff1-bbb1-dd1---66661991991ee1-ee13333312-a299-2
-------66---------------16666666-----------88-6-67777777--------------------------------3333333--3333333-----------6-----2-2-52-
------6776--------------66777677----------88887-76777777-------------------------55-----4444444334444444-7---7-----7-----2-2442-
-----677776-------------67777677-f-555-f-888888-77677777------------------------594-55--4444444444444444--7-7------7-----2-2ff2-
----67777776------------67776777--2fff2-888888887776777744444444-----------------595995-4444444444444444---f----677f776---4444--
---6777777776-----------67767777---444--4554a6a477776777-4---4-------------------59999954444444444444444--797------7------4222--
--677777777776----------67767777---333--4554a6a4777776774444444444------------44-599aa954444444444444444-7-2-7-----7------4222--
-67777777777776---------67676777---2-2--4554a6a477777767545554555444--------4445--5955954444444444444444---9-------9------------
6777777777777776--------67777667---4-4--455444447777777654--54-----444----444-----5455454444444444444444---2-------2------------
-------7766666666-------66666666----------------dddddddd67777776----------33333----4------------11611111---95-----33333---------
------656555555f76------77777777----------------7777777767777776---5------33333---433-----------1b1b1b1b---99-----33333---------
-----65-6-----65656-----77777777---555-----555--77777777-777777---565------888----334-----------bbbbbbbb---95------888----------
----65--6----65-65-6----77777777---fff-----fff--77777777-677777----9--------9----33433--4--4--4-bbbbbbbb---99-------a----4---44-
---65---6---65--65--6---77777777--24442---24442-77777777--67776---9a9------9a9---33333--44444444bbbbbbbb---95------aaa---4---442
--65----6--65---65---6--77777777-f-333-f--f333f-77777777--6777----aaa------aaa---34343--45545545bbbbbbbb---99-----9aaa9---44442-
5755555575f555556555556577777777---2-2-----2-2--77777777---677----9a9------9a9----343---4--4--4-bbbbbbbb---88------aaa----4444--
66666666666666666666667677777777---4-4-----2----77777777----66----242--------------4----4--4--4-bbbbbbbb--6666------9-----4--4--
6565656565656565-6--6---66666661----------------7777777667777777--242----8-44------2-------5----11116111--------b3b3b3b3--------
66666665666666655555555577677766----------------7777776--6777777--242----5-f4----893d1----595---1b1b1b1b--------bbbbbbbb--------
65656565656565656565656577677776---555-----555--777776----677777-66666---f6665--89bc3d1--59995--bbbbbbbb--------bbbbbbbb--------
66666665666666656666666577767776---fff-----fff--77776------677776222226--5-666--89bc3d1-5feeef5-bbbbbbbb-6-6----bbbbbbbb-----44-
65656565656565656565656577776776--24442---24442-7776--------67772439d42--5-66f-----2----9e555e9-bbbbbbbb-676----bbbbbbbb-----442
66666665666666656666666577776776--f333f---f333f-776----------67724ca6444---66------2----9e555e9-bbbbbbbb-777675-bbbbbbbb-444442-
65666665656565656565656577767676---2-2-----2-2--76------------6724dbd452--6666--4--2----9e555e9-bbbbbbbb--66765-bbbbbbbb4-4444--
65666665666666656666666576677776---4-4-------2--6--------------624444452-999999-22-2-2429555559-bbbbbbbb--6--6--bbbbbbbb--4--4--
]]

local __map__ = [[
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000464646465b5a5b5a5b5a5b4600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005657575757575757575757575744550000000000000000000000000000000000000000000000004d00000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000056586a69696969696969696969696b585500000000000000000000000000000000000000000000005d00000000000000000000000000000000000000
0000000000000000000000000000450000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000056586a686868686868686868686868686b5855000000000000000000000000000000000000000000008500000000000000000000000000000000000000
00000000000000000000000000565744445500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000056586a6868686868686868686868686868686b5855000000000000000000000000000000000000005a787a79450000000000000000000000000000000000
0000000000000000000000005658585858585500000000000000000000000000000000000000005a4545000000000000000000000000004b4a000000000000000056586a68686868686868686868686868686868686b58550000000000000000000000000000000000787a7a7a7a7a7900000000000000000000000000000000
00000000004345454646465658585858585858554545464656550000004c00000000000000564457495449485757494747474747474747485757575757575757576a69686868686868686868686868686868686868686b585500000000000000000000004b000000786868686868686879000000000000004c004c00004c0000
47474748444457575757575858585858585858584948575758586c595959595959595959596a696969696969696969696969696969696969696969696969696969686868686868686868686868686868686868686868686b5854545447474747474747474844447c7b7b7b7b7b7b7b7b7b7d6c59595959595959595959595959
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000b2b200000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000b2b1b100b2b2b2000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000046464600a0a1a1a1a1a1a20045b0b0b045b0b0b0454500
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004a4b0000000000000000485757575749008300830048575757575757575757575749
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000464646464646000000000000000000000000000000000000000000005657574747474747474747585858586a6b00830083006a69696969696969696969696b
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000787a7a7a7a7a7a79000000000000000000000000000000000000005657585858585858586a696969696969696868008300830068686868686868686868686868
00000000000000000000000000005f6f6f5e4e004e4e004b0000000000000000bb4e5bbb00009a4e00000000000000000000000000000000000000000000787a686868686868686879000000000000765a5b5a5b5a5b5a4545005658585858585858586a68686868686868686868008300830068686868686868686868686868
595959595959595959595959597e6e6e6e6e6f6f6f6f6f6f72727272727272726f6f6f6f6f6f6f6f6f7f5959595959595959595959595959595959595973696969696969696969696b495454544444444444444444444444445758585858585858586a6868686868686868686868595959595968686868686868686868686868
000000000000000000000000000000000000000000000000000000000000000000000000000000004f820000000000000000000000004f82000000000000000000000000000000000000000000000000900000000000004f77820000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000080810000000000000000000000008081000000000000000000000000909100000000000000000090670000000000008067810000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000080814b00000000000000003000108081000000000000000000000090678190910000000000000080679091000000008067810000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000080677720202020202020207777776781000000000000000090919067676767810000000000000080678067910000008067810000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000004d00000000000000000000000000000000000000000000000000008067676767676767676767676767678100000000000000008067676767676767820000000f000080678067679100008067810000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000005d0000000000000000000000000000000000000f000000000000008067676767676767676767676767678100000000000000008067676767676767810000004f7777777777777777820080678100000000000000000000000000000000000000000000000000000f00000f0000000000000000
000000000000000000000000008500000000000000000010000000000000004f7782000000000000806767676767676767676767676767810000000010000090676767676767676781000000806767676767676767810080678100000000000010000000000000000000000000000000000000004f7777820000100000000000
595959595959595959595959737a3f59595959595959595959595959595959595959595959595959806767676767676767676767676767675959595959595959595959595959595959595959595959595959595959595959595959595959595959595959595959595959595959595959595959595959595959594fa3a3a3a3a3
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004f7777777777777782000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000090779100909100000000000000000000000000000000000000000000000000000000806767b6a7a700a7a7000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000009067676791806791000000000000000000000000000000000000000000000000000090806781000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000009067676767866767679100000000000000000000000000000000000000000000000090678067b6000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000090676767678667676767810000000000000000000000000000000000000000000000906767808100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000004b0000000000000000104a0f000000000000000000906767676767806767676781000000000000000000000000000000000f0000000000906767678081000000000000000000000030004b0000000000000000000000000000000000000000000000000000000000009d00000000000000
0000000000000000000000001000004f20202020202020207777820000000000000000906767676767866767676767679100000000000000004c000000004f7777778200009067676767806720202020202020207777777777820000000000000000000000100000000000000000000000465a76460000bdadab4a4b00000000
a3a3a3b359595959595959595959598067676767676767676767815959595959595959806767676786676767676767678159595959595959595959595959595959595959595959595959595959595959595959595959595959595959595959595959595959595959595959595959595969696969696969696969696987878787
00000000000000000000000000000000000000000000000000005a76af00ab5a004646464646460000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000787a7a7a7a7a7a7a7a7a7a7a7a7a7a7a79000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000786868686868686868686868686868686868790000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000007868686868686868686868686868686868686868790000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000bb4b0000000000000000009a0000000000
000000000000000000000000000000000000000000786868686868686868686868686868686868686868687900000000000000000000000000000000a0a1a1a1a1a1a1a1a1a1a20000a0a1a1a1a1a1a1a1a1a1a200000000000000000000000000000000000000000000000000005f6f6f72727272727272726f6f5e00000000
00000000000000000000000000000000000000007868686868686868686868686868686868686868686868687900000000000000000000000000787a79008300008300008300787a7a79008300008300008300787a7a790000000000000000000000000000000000000000aaaa5f6e6e6e6e6e6e6e6e6e6e6e6e6e6e5e000000
000000004646464646464a5b5a5b4a464645457868686868686868686868686868686868686868686868686868794b0000000000000000004a78686868798300008300008378686868687983000083af0083786868686879000000004c00004c00004c00000000ba00ba5f6f6f6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e5eaa00
878787879c9b9b9b9b9b9b7a7a7a9b9b9b9b9b6868686868686868686868686868686868686868686868686868689b87878787878787879c7a68686868683f5959595959736868686868687a7a7a7a7a7a7a6868686868683f595959595959595959595959597e6f6f6f6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6e6f6f
00000000000000000000000000000000000000000000000000000000000000000000000000b2000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000b200b2b1b20000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000b1b2b1b1b1b20000000000000000009d9e9d00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000b1b1b1b1b1b1000000000000000000adadad00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004500000000000000000000000000000000000000
00000000000000000000004d00000000000000000000000000000000000000000000b1b1b1b1b1b10000000000000000787a7a7a790000000000000000000000000000000000000000000000000000000000000000000000a800000000000000000000000000000000000056be55000000000000000000000000000000000000
000000000000000000000085000000000000000000000000000000000000b9000000b1b1b1b1b1b1000000000000007868686868687900000000000000000076455aaf0000000000000000000000004b0000000000000000b8000000000000000000000000000000565556585858550000000000000000000000000000000000
baba0000004c00000000787a7900000000004c004c004c000000000000787a790000b0b0b0b0b0b000004646464678686868686868687900004c00000000ab48444444554a0000000000000000005657555a450000000056575500009997979798005b5b5a76455658585858585858550000bd4545454545004a4b0000000000
6f6f7f595959595959736868683f59595959595959595959595959597369696969696969696969696969696969696868686868686868683f595959595959596a696969696987878787878787876969696b5744acacac4444444444446c5959596d444444444444585858585858585858bebebe57575757574457494747474747
]]
local data = loadspr(__spr__)

function spr(nr, ...)
  if nr == 0 or not nr then return end
  gfx.spr(data, nr, ...)
end

local btnmap = {
  [0] = 'left',
  [1] = 'right',
  [2] = 'up',
  [3] = 'down',
  [4] = 'z',
  [5] = 'x',
}

local function btnp(n)
  return keypress(btnmap[n] or 'space')
end

local function btn(n)
  return keydown(btnmap[n] or 'space')
end

local map = loadmap(__map__)

--[==[
local gff = [[
0000000000000000000000000000000101000000000000000000000000000001020000000000000000000000000000000100000000000000000000000000000000000000000101020000010101010100000000000000000000040101010000000000000000000000000800000000000000000200000401080000000000000000
000000010000000200000000000000000000000a0000000101010100000101000101010a0000080100000101000000010000000a000000000001010100010001
]]

function loadgff(str)
  local gff = {}
  local i = 0
  str = str:strip()
  for l in str:lines() do
    for x = 1, 256, 2 do
      gff[i] = tonumber(l:sub(x, x+1), 16)
      i = i + 1
    end
  end
  return gff
end
gff = loadgff(gff)
]==]--
-- bits: 0 - destructable, 1 - landable, 2 - sink, 3 -- not repair?
local gff = { [15] = 0x01, [16] = 0x01, [31] = 0x01, [32] = 0x02,
  [48] = 0x01, [69] = 0x01, [70] = 0x01, [71] = 0x02,
  [74] = 0x01, [75] = 0x01, [76] = 0x01, [77] = 0x01,
  [78] = 0x01, [89] = 0x04, [90] = 0x01, [91] = 0x01,
  [92] = 0x01, [105] = 0x08, [114] = 0x02, [117] = 0x04,
  [118] = 0x01, [119] = 0x08, [131] = 0x01, [135] = 0x02,
  [147] = 0x0a, [151] = 0x01, [152] = 0x01, [153] = 0x01,
  [154] = 0x01, [157] = 0x01, [158] = 0x01, [160] = 0x01,
  [161] = 0x01, [162] = 0x01, [163] = 0x0a, [166] = 0x08,
  [167] = 0x01, [170] = 0x01, [171] = 0x01, [175] = 0x01,
  [179] = 0x0a, [185] = 0x01, [186] = 0x01, [187] = 0x01,
  [189] = 0x01, [191] = 0x01 }

function fget(n, f)
  if not f then
    return gff[n] or 0
  end
  local r = gff[n] or 0
  return (bit.band(r, bit.lshift(1, f)) ~= 0)
end

function fset(n, f, v)
  if v == nil then
    gff[n] = f or 0
    return
  end
  if v then
    gff[n] = bit.bor(fget(n), bit.lshift(1, f))
  else
    gff[n] = bit.band(fget(n), bit.bnot(bit.lshift(1, f)))
  end
end

function sget(x, y)
  local r, g, b, a = data:val(x, y)
  if a == 0 then
    return 0
  end
  return 1
end
local border_nr = false

mixer.reserve(8)
for i=1, 6 do
  synth.on(i, true)
  synth.vol(i, 1)
end
snd.apply(1, 'engine')
snd.apply(2, 'boom')
snd.apply(3, 'flash')
snd.apply(4, 'water')
snd.apply(5, 'boom2')
snd.apply(6, 'takedown')

function engine()
  if plane.t <= 0.5 or plane.sink==1 or plane.stp then
    synth.change(1, 0, synth.NOTE_OFF, 0)
  end
end
function sfx(nr)
  if nr == 0 then
    synth.change(1, 0, synth.NOTE_ON, 440)
    synth.change(1, 0, synth.LFO_FREQ, 100 + 90*plane.t)
    return
  end
  if nr == 1 or nr == 2 then
    border_nr = 1
    if nr == 1 then
      synth.change(2, 0, synth.NOTE_ON, 320)
    else
      synth.change(5, 0, synth.NOTE_ON, 100)
    end
    return
  end
  if nr == 3 then
    synth.change(6, 0, synth.NOTE_ON, 160)
    return
  end
  if nr == 4 then
    synth.change(4, 0, synth.NOTE_ON, 320)
    return
  end
  if nr == 5 then
    synth.change(3, 0, synth.NOTE_ON, 220 + rnd(400))
    return
  end
end
function update_border()
  if not border_nr then return end
  border(flr(rnd(16)))
  border_nr = border_nr + 1
  if border_nr > 4 then
    border_nr = false
    border(0)
  end
end
local main_music = flase

function music(nr)
  if nr == 0 then
    mixer.play(over_mus, 1)
  elseif nr == 1 then
    main_music = mixer.play('main', -1)
  elseif nr == -1 and main_music then
    mixer.stop(main_music, 3)
    main_music = false
  end
end

local flipsx = {}
local flipsy = {}
local flipsxy = {}

function mget(x, y)
  if not map[y+1] or not map[y+1][x+1] then
    dprint(y, x)
  end
  return map[y+1][x+1]
end

function mset(x, y, v)
  map[y+1][x+1] = v
end

local anims={
  [75]={92,15},
  [77]={116,20},
  [89]={117,10},
  [15]={31,15},
  [157]={158,20},
  [172]={188,10},
  [158]={157,20},
  [175]={191,20},
}

function anim(c)
  local a=c and anims[c]
  if a then
    if flr(tm/a[2])%2==0 then
      return a[1]
    end
  end
  return c
end

function mm(xc,yc,v)
  if yc<8 or yc>15 then
    return 0
  end
  while xc>=768 do
    xc = xc - 768
  end
  yc = yc - 8
  if xc<0 then
    xc=xc +768
  end
  while xc>=128 do
    yc=yc + 8
    xc=xc - 128
  end
  if v then
    mset(xc,yc,v)
  else
    local c=mget(xc,yc)
    return anim(c),c
  end
end

easy=false
hard=false

function dif(a,b,c)
  return hard and a or (easy and c or b)
end
invert=false

local pspr={
  {64,8,10,1-1/8},--\\
  {13,10,9,1-1/16},--\
  {1,9,9,0},-->
  {3,9,9,1/16},--/
  {5,9,9,1/8},--//
  {7,9,9,0},
  {9,9,9,0},
  {11,9,9,0},
}

local turnl={6,7,8,-7,-6,-3}
local turnr={-6,-7,-8,7,6,3}
local turn={}
tturn={1,0.8,0.5,0.8,1,1}

function alim(p,m)
  if p>0 then
    if abs(p)>m then
      return m
    end
  else
    if abs(p)>m then
      return -m
    end
  end
  return p
end

function axnorm(x)
  if x<0 then
    x=x+768*8
  end
  if x>=768*8 then
    x=x%(768*8)
  end
  return x
end

function xnorm(d)
  if d>=384*8 then
    d=d-768*8
  end
  if d<=-384*8 then
    d=d+768*8
  end
  return d
end

function cam(p)
  local d=xnorm(sx-rsx)
  d=alim(d,2)
  sx=sx-d
  if ending then
    rsx=0
    return
  end
  if p.dir>0 then
    rsx=p.x+32
  else
    rsx=p.x-32
  end
end

function mksafe()
  if safe and abs(xnorm(plane.x-safe.x)) < 64 then
    return
  end
  safe = {}
  for k,v in pairs(plane) do
    safe[k]=v
  end
  safe.f=1
end

function restore()
  plane = {}
  for k,v in pairs(safe) do
    plane[k]=v
  end
  sx=plane.x
end

function plu(p)
  if title or gameover then
    return
  end
  if p.restore and tm%10==0 then
    p.restore=p.restore-1
    if p.restore==0 and planes>0 then
      restore()
    end
    if p.restore==0 and planes==0 then
      gameover=1
      music(0)
    end
  end
  p.x = xnorm(p.x)
  rsx,sx = xnorm(rsx),xnorm(sx)

  if p.x>=192*8 and p.x<209*8 then
    e_anch=true
  end
  if p.x<=-192*8 and p.x>-209*8 then
    w_anch=true
  end
  local d=plane.dir>0 and 1 or -1

  if p.crash and not p.stp then
    if p.smoke and (tm%15==0) then
      smk(p.x,p.y)
    end
    if p.smoke and (btnp(4) or btnp(5)) then
      if flr(rnd(150))==1 then
        p.smoke=false
        p.crash=false
        tricky=true
      else
        p.t=p.t+0.005
        if p.t>1 then
          p.t=1
        end
      end
      sfx(0)
    end
    if p.t>0 then p.t=p.t-0.01 end
    local c=mm(flr(p.x/8),flr(p.y/8))
    if c==0 or fget(c,0) then
      p.y=p.y+0
    else
      if not fget(c,2) then
        mkexp(p.x,p.y)
      else
        p.y=p.y+2
        p.sink=1
        sfx(4)
      end
      planes=planes-1
      p.stp=true
      p.smoke=false
      p.restore=4
    end
  end
  if p.sink then
    p.y=p.y+0.1
    if p.sink>6 then
      p.sink=false
    end
  end
  local o=pspr[abs(p.dir)]
  local a=o[4]
  if d<0 then a=0.5-a end
  local t=p.t^0.5
  if t ~= t then t = 0 end -- check nan
  if abs(p.dir)==1 then t=1 end
  if abs(p.dir)==2 and t<0.5 then t=0.5 end
  if p.turn then
    t=t*tturn[p.turn]
  end
  if p.f<=0 then
    p.t=p.t-0.01
    if p.t<0 then p.t=0 end
  else
    p.f=p.f - p.t*dif(1.1,1,0.75)*0.001 --fuel
    if p.f<0 then p.f=0 end
  end
  local dx=1*cos(a)*(t)
  local dy=1*sin(a)*(t)+(1-t)
  local colx=ceil(p.x+dx)
  local coly=ceil(p.y+dy)
  local colc=collision(colx,coly)
  local oland=p.land
  if not p.turn then p.land=false end
  if not p.stp and not p.land and colc then
    if fget(colc,1) and abs(p.dir)>(easy and 1 or 2) and abs(p.dir)<5 then
      -- p.y=coly\8*8-1
      p.dir=d>0 and 4 or -4
      p.land=true
      if p.crash then tricky=true end
      p.repair=not fget(colc,3)
      p.smoke=false
      p.crash=false
      if not oland then sfx(3) end
    else
      p.crash=1
      p.dir=1
      if d<0 then p.dir=-1 end
      p.turn=false
    end
  end

  if not p.stp then
    p.x=p.x + dx
    if (not p.land) then p.y=p.y+dy end
  end
  if p.turn and tm%8==0 then
    if p.turn==1 and abs(p.dir)~=3 then
      if (abs(p.dir)<=2) then d=-d end
      p.dir=p.dir-d
    else
      p.turn=p.turn+1
      if p.turn>#turn then
        p.turn=false
      else
        p.dir=turn[p.turn]
      end
    end
  end
  if (p.repair and p.t==0 and not p.crash) then
    if p.land then
      if (p.x<128 and p.x>-128 and friends>0) then
        ending=1
        friends=0
        frnds={}
        music(1)
        frnd(flr(p.x/8)+1,6)
      elseif ending then
        ending=ending+1
        if ending == 30 then
          frnd(flr(p.x/8)+1,6)
        end
        if #frnds == 0 and ending>=160 then
          mset(5,6,149)
          if (tm%20==0) then smk(5*8+10,64+6*8,-0.3) end
        end
      else
        mksafe()
      end
      p.f=p.f+0.005
      if (p.f>1) then p.f=1 end
    end
  end
  if tm%3==0 and not p.land and not p.turn and
    (t<0.3 or p.y<8) and abs(plane.dir)>1 then
    plane.dir=plane.dir-d
  end
  if (p.crash or ending) then return end
  if not p.turn and
    ((btn(0) and p.dir>0) or
      (btn(1) and p.dir<0)) then
      turn=d>0 and turnl or turnr
      p.turn=1
  end
  if p.f>0 then
    if btn(4) then
      p.t=p.t+0.02
    elseif btn(5) then
      p.t=p.t-0.02
    end
  end
  if (p.t>1) then p.t=1 end
  if (p.t<0) then p.t=0 end
  if not p.land and tm%3==0 and not p.turn then
    if btn(invert and 3 or 2) and abs(p.dir)<5 and p.y>=8 then
      if (p.t>=0.3 or abs(p.dir)<2) then p.dir=p.dir+d end
    elseif btn(invert and 2 or 3) and abs(p.dir)>1 then
      p.dir=p.dir-d
    end
  end
end

function pld(p)
  local fl=false
  local n=abs(p.dir)
  if (p.dir<0) then fl=true end
  local s=pspr[n]
  local w=flr(tm/(4-p.t^0.5*3)%2)
  if (p.crash) then w=0 end
  if(w==1 and p.t>0.01) then sfx(0) end
  local x=s[2]
  if (fl) then x=16-x end
  spr(s[1]+w*32,
      tos(p.x-x),
      p.y-s[3],
      2,2,fl)
end

function cld(r,x,y)
  local r1,r2=r,r
  local c={x=x,y=y,{0,0,r,0}}
  local x2=0
  x,y=0,0
  for i=1,rnd(2)+2 do
    x=x+r1
    x2=x2-r2
    if i==1 then
      r1=r1*(0.8+rnd(0.2))
      r2=r2*(0.8+rnd(0.2))
    else
      r1=r1*(0.5+rnd(0.5))
      r2=r2*(0.5+rnd(0.5))
    end
    add(c,{x,y,r1,rnd(1)})
    add(c,{x2,y,r2,rnd(1)})
  end
  c.d=(flr(rnd(2))==1) and 1 or -1
  c.f=(flr(rnd(dif(2,3,4)))==1) and true or false
  if (c.f and c.y<(r+8)) then c.y=r+8 end
  if c.f and abs(xnorm(c.x-plane.x)) < 128 then
    c.f=false
  end
  return c
end

function tos(x)
  return xnorm(64-(sx-x))
end

function flash(x,y,l)
  if l<=0 then
    return
  end
  l=l-1
  local c=mm(flr(x/8),flr(y/8))
  if c~=0 or y>128 then
    return
  end
  local dy=16+rnd(16)
  local dx=rnd(32)-16
  if hitbox(plane.x,plane.y,
    x-16,y,32,32) and
    not plane.land then
    dx=plane.x-x
    dy=plane.y-y
    l=0
    if not plane.land then
      plane.crash=1
      plane.smoke=true
    end
  elseif hitbox(plane.x,plane.y,x,y,dx,dy) then
    if not plane.land then
      plane.crash=1
      plane.smoke=true
    end
  end
  line(tos(x),y,tos(x+dx),y+dy,7)
  flash(x+dx,y+dy,l)
end

local fill7 = gfx.new [[
-------*
*-*-
-*-*
*-*-
-*-*]]

local fill5 = gfx.new [[
-----*
*-*-
-*-*
*-*-
-*-*]]

function cldd(c)
  local x=tos(c.x)
  if x<-64 or x>192 then
    return
  end
  if c.flash then
    if c.flash==1 then sfx(5) end
    c.flash=c.flash+1
    local cl=c[flr(rnd(#c))+1]
    flash(c.x+cl[1],c.y+cl[2],#cl)
    if (c.flash>4) then c.flash=false end
  end
  for v in all(c) do
    fill_circle(x+v[1],
      c.y+v[2]+sin(v[4])*flr(v[3]/8),
      v[3],
      c.flash and 15 or c.f and fill5 or fill7)
  end
end

function cldm(c)
  local seen
  c.x=c.x+c.d*rnd(0.5)
  c.x=xnorm(c.x)
  for v in all(c) do
    v[4]=v[4] + rnd(0.01)
  end
  if c.f and not c.flash and tm%30==0 and rnd(100)<dif(35,30,15) then
    c.flash=1
  end
  return seen
end

exp={}
smks={}

local fill_50 = gfx.new [[
-----1
1010
0101
1010
0101]]

function smkd(v)
  local x=tos(v.x)
  if x<-16 or x>132 then
    return
  end
  -- TODO pattern
  if v.r>2 then
    circle(x-4,v.y,v.r-1,fill_50)
  end
end

function bird(x,y)
  return {s=rnd(dif(1,0.8,0.4))+0.4,spr=66,
    x=x,y=y,d=rnd(1),f=flr(rnd(2))}
end

function bal(x,y)
  return {x=x,y=y,a=rnd(1)}
end

function bald(v)
  local x=tos(v.x)
  if x<-16 or x>136 then
    return
  end
  spr(143,x-4,v.y-8,1,2)
end

function birdd(v)
  local x=tos(v.x)
  if x<-16 or x>132 then
    return
  end
  spr(v.spr+16*flr(flr(tm/4)%2),tos(v.x-4),v.y-4)
end

frnds={}

function frnd(x,y)
  add(frnds,{x=x*8-3,y=64+y*8+5,step=1})
end

function frndm(v)
  local a={148,164,180,164}
  local b={180,165,180,181}
  if tos(v.x)<-15 or tos(v.x)>141 then
    return true
  end
  if ending or (plane.land and
    abs(xnorm(v.x-plane.x))<64) then
    if (tm%2~=0) then return true end
    if not ending and abs(xnorm(v.x-plane.x))<=2 then
      friends=friends+1
      sfx(6)
      return false
    end
    v.spr=b[v.step]
    local dx=xnorm(v.x-plane.x)>0 and -1 or 1
    if (ending) then dx=1 end
    v.x=v.x+dx
    if (ending and v.x>40) then return end
    v.step=v.step+1
    if (v.step>4) then
      v.step=1
    end
    return true
  end

  if (tm%5==0) then v.step=v.step + 1 end
  if (v.step>4) then v.step=1 end
  v.spr=a[v.step]
  return true
end

function frndd(v)
  local x=tos(v.x)
  if x>140 or x<-16 then
    return
  end
  spr(v.spr, x-4,v.y-4)
end

crashes={}

function start()
  if (not ending and not options) then music(1) end
  for v in all(crashes) do
    mm(v[2],v[3],v[1])
  end
  crashes={}
  plane={x=-18,
         y=120,dir=4,
         t=0,f=1,
         true,
         land=true,
         turn=false}
--  plane.x=50
--  plane.y=10
  planes=5
  friends=0
  tm=0
  e_anch,w_anch=false,false
  tricky=false
  sun=24
  sund=0.1
  sx,sy=plane.x,64
  rsx,rsy=sx,64

  clds={}
  birds={}
  frnds={}
  bals={}

  mksafe()

  frnd(126+256,6)

  for i=1,7 do
    add(bals,bal(3*i*128+64,rnd(64-8)))
    add(bals,bal(-4*i*128-64,rnd(64-8)))
  end

  for i=1,dif(36,32,24) do
    add(clds,cld(rnd(10)+8,
           rnd(6144)-3072,rnd(64)))
  end
  for i=1,dif(64,32,24) do
    add(birds,bird(rnd(6144)-3072,
             rnd(64)))
  end
end

frames=0

function init()
  title=true
  start()
end

function hitbox(x,y,xx,yy,ww,hh)
  if x>1536 then
    x=x-1536
    xx=xx-1536
  elseif x<-1536 then
    x=x+1536
    xx=xx+1536
  end
  if x>=xx and y>=yy and x<xx+ww and y<yy+hh then
    return true
  end
end

function hit(x,y,xx,yy,ww,hh)
  if x>1536 then
    x=x-1536
    xx=xx-1536
  elseif x<-1536 then
    x=x+1536
    xx=xx+1536
  end
  if x>xx-ww and y>yy-hh and x<xx+ww and y<yy+hh then
    return true
  end
end

function smk(x,y,d)
  add(smks,{x=x,y=y,r=2,d=d})
end

function smkm(v)
  v.r=v.r+0.1
  if (v.d) then v.y=v.y+v.d end
  if (v.r<6) then return true end
end

function balm(v)
  if v.crash then
    v.y=v.y+v.crash
    v.crash=v.crash+0.01
    if mm(flr(v.x/8),flr((v.y+3)/8))~=0 or v.y>128 then
      mkexp(v.x,v.y)
      return false
    end
    return true
  end
  if tm%1==0 then
    v.a=alim(v.a+rnd(0.1)-0.05,1)
  end
  local dx=cos(v.a)*rnd(dif(1,0.7,0.7))
  local dy=sin(v.a)*rnd(dif(1,0.7,0.7))
  if v.y+dy<=0 or mm(flr((v.x+dx)/8),flr((v.y+6+dy)/8))~=0 or v.y>128 then
    v.a=rnd(1)
  else
    v.x=v.x+dx
    v.y=v.y+dy
  end

  if not plane.land and hitbox(plane.x,plane.y,
        v.x-4,v.y-9,8,16) then
    plane.crash=1
    plane.smoke=true
    sfx(1)
    mkexp(plane.x,plane.y)
    v.crash=0.5
  end
  return true
end

function birdm(v)
  local xx,yy=v.x+v.s*cos(v.d),v.y+v.s*sin(v.d)
  local c=mm(flr(xx/8),flr(yy/8))
  if (yy<0 or yy>128) then c=1 end
  if c==0 then
    v.x,v.y=xnorm(xx),yy
  else
    local b=bird(v.x,v.y)
    v.d=b.d
    v.s=b.s
  end
  if not plane.land and not plane.stp and
      hit(v.x,v.y,plane.x,plane.y,4,4) then
    plane.crash=1
    plane.smoke=true
    sfx(1)
    return false
  end
  return true
end

function expm(v)
  v.t=v.t+1
  for e in all(v) do
    local s=5/v.t
    e.x=e.x+s*cos(e.a)
    e.y=e.y+s*sin(e.a)
    e.y=e.y+v.t/10
  end
  if (v.t>10) then return false end
  return true
end

function expd(v)
  for e in all(v) do
    spr(e.spr,tos(e.x-4),e.y-4)
  end
end

function update()
  if type(title)=='number' and title<0 then
    title=title+1
    if (title==0) then
      title=false
      music(-1,250)
    end
  end
  if title then
    if options then
      if btnp(4) then
        start()
        options=not options
      elseif btnp(0) then
        if not easy and not hard then
          easy=true
        elseif hard then
          hard=false
        elseif easy then
          easy=false
          hard=true
        end
        sfx(6)
      elseif btnp(1) then
        if not easy and not hard then
          hard=true
        elseif easy then
          easy=false
        elseif hard then
          hard=false
          easy=true
        end
        sfx(6)
      elseif btnp(2) or btnp(3) then
        invert=not invert
        sfx(6)
      end
    elseif btnp(4) then
      title=-10
      return
    elseif btnp(5) then
      options=not opttions
    end
  end
  if gameover then
    gameover=gameover+1
  end
  if (gameover or ending) and (btnp(4) or btnp(5)) then
    if ending and ending<200 then
      return
    end
    if (gameover and gameover<30) then return end
    gameover=false
    start()
    title=true
    ending=false
    return
  end
  if (tm%5==0 and sun<256 and not title) then sun=sun+sund end
  tm=tm+1
  for v in all(clds) do
    cldm(v)
  end
  ff = {}
  for v in all(frnds) do
    if (frndm(v)) then add(ff, v) end
  end
  frnds = ff
  local e = {}
  for v in all(exp) do
    if (expm(v)) then add(e,v) end
  end
  exp = e
  local b={}
  for v in all(birds) do
    if (birdm(v)) then add(b,v) end
  end
  birds = b
  local bb = {}
  for v in all(bals) do
    if (balm(v)) then add(bb,v) end
  end
  bals = bb
  local sm = {}
  for v in all(smks) do
    if (smkm(v)) then add(sm,v) end
  end
  smks=sm
  plu(plane)
  cam(plane)
end

sts={}

blink=false

function stars(yy)
  if #sts==0 then
    for i=1,40 do
      add(sts,{x=rnd(128),
         y=rnd(128),
         c=flr(rnd(15)+1)})
    end
  end
  if (not blink and tm%30==0) then blink=flr(rnd(#sts))+1 end
  if (blink) then sts[blink].b=1 end
  for v in all(sts) do
    if (v.y<yy) then screen:val(v.x,v.y,v.b or v.c) end
  end
  if (blink) then sts[blink].b=false end
  if (blink and tm%19==0) then blink=false end
end
local fill_c1 = gfx.new [[
-0----------1
1010
0101
1010
0101]]

local fill_c6 = gfx.new [[
------1------
1010
0101
1010
0101]]

local fill_0a = gfx.new [[
----------1
1010
0101
1010
0101]]

local fill_1d = gfx.new [[
-0-----------1
1010
0101
1010
0101]]
function sky()
--fillp(0b1010010110100101)
  if sun > 210 or sun < 0 then
    sund=-sund
  end
  if sun>55 then
    local sl=64*(((sun-55)/55)^2)
    fill_rect(0,0,128,sl,1)
    fill_rect(0,sl-16,128,sl-8, fill_1d)
    fill_rect(0,sl-8,128,sl, {0x29, 0x7D, 0xBF, 0XFF})
    stars(sl-24)
  end
  fill_circle(64,sun,12,fill_0a)
  fill_circle(64,sun,10,0xa)
  if sx<(100+128)*8 and sx>(-(100+128)*8) and sun<130 then
    fill_rect(0,105,128,112,0xa)
    fill_rect(0,113,128,128,0x9)
  else
    fill_rect(0,105,128,112,0xd)
    fill_rect(0,113,128,128,fill_1d)
  end
end

function hudn(v)
  return ceil(v*14)
end

function hud()
  if (title) then return end
  rect(0,0,15,2,0)
  line(1,1,14,1,0xd)
  local p = hudn(plane.t)
  if (p>0) then line(1,1,p,1,8) end
  rect(0,4,15,6,0)
  line(1,5,14,5,0xd)
  p=hudn(plane.f)
  if (p>0) then line(1,5,p,5,0x9) end
  for i=1,planes do
    spr(132,128-9*i,0)
  end
  for i=1,friends do
    spr(180,128-9*i,8)
  end
  if plane.crash and plane.smoke and not plane.stp then
    print("Z/X-PRESS FAST!",32,60+rnd(2)-1,flr(tm/2)%2==1 and 8 or 1)
  end
end

function mkexp(x,y)
  local e={t=0}
  for i=1,rnd(3)+5 do
    add(e,{spr=98+abs(flr(rnd(5))),x=x,y=y,a=rnd(1)})
  end
  sfx(2)
  add(exp,e)
end

function collision(x,y)
  local xx,yy=flr(x/8),flr(y/8)
  c=mm(xx,yy)
  if (c==0) then return end
  -- TODO
  if sget((c%16)*8+x%8,
    flr(c/16)*8+(y%8))==0 then
    return
  end
  if fget(c,0) then
    local c,rc=mm(xx,yy)
    add(crashes,{rc,xx,yy})
    mm(xx,yy,0)
    mkexp(xx*8+4,yy*8+4)
  end
  return c
end

function scene(x,y,f)
  x,y=flr(x),flr(y)
  x=x-64
  y=y-64
  local dx=x%8
  local dy=y%8
  x=flr(x/8)
  y=flr(y/8)
  for yy=8,16 do
    for xx=0,16 do
      local c,rc=mm(x+xx,y+yy)
      if (c~=0 and (not f or f==rc)) then
        spr(c,xx*8-dx,yy*8+dy)
      end
    end
  end
end

function opts(x,y)
  y=y+3
  x=x+16
  print("INGAME CONTROL",x+20,y,1)
  y=y+9
  if not invert then
    print("⬆️⬇️⬅️➡️ TURNING",x,y)
  else
    print("⬇️⬆️⬅️➡️ TURNING",x,y)
  end
  y=y+8
  print("🅾️Z/❎X THROTTLE UP/DOWN",x,y)
  y=y+13
  print("OPTIONS",x+32,y,0xf)
  y=y+9
  x=x+10
  local m=hard and "HARD" or (easy and "EASY" or "NORMAL")
  print("⬅️➡️ MODE:"..m,x,y,7)
  m=invert and "INVERTED" or "NORMAL"
  y=y+8
  print("⬆️⬇️ CONTROL:"..m,x,y)
  y=y+9
  print("🅾️Z OK",x+24,y,(flr(tm/5)%2==0)and 7 or 15)
end
function print_bord(t, x, y, a, b)
  print(t, x-1, y, b)
  print(t, x+1, y, b)
  print(t, x, y-1, b)
  print(t, x, y+1, b)
  print(t, x, y, a)
end

local fill_10x = gfx.new [[
01
1010
0101
1010
0101]]

function help(x,y)
  print_bord("YOUR BROTHER IS A POLAR",x+16,y,1, 6)
  print_bord("EXPLORER. HE GOT IN TROUBLE!",x+8,y+8,1, 6)
--  fillp(0b1010010110100101)
  y=y+1
  x=x+3
  fill_rect(x+24,y+16,x+95,y+32,fill_10x)
  for i=0,8 do
    local c=0
    if (i==1) then c=147 end
    if (i==7) then c=179 end
    if (i>1 and i<7)then c=163 end
    if (c>0) then spr(c,x+8*i+24,y+24) end
  end
  for i=0,8 do
    spr(89,x+8*i+24,y+32)
  end
  spr(148,x+54,y+16)
--  fillp(0)
  line(27,y+15,100,y+15,6)
  line(27,y+15+24,100,y+15+24, 6)
  line(27,y+15,27,y+15+24, 6)
  line(100,y+15,100,y+15+24, 6)
  if flr(tm/15)%2==1 then
    print("SOS!",x+64,y+17,6)
  end
  x=x-3
  print("JUST TAKE HIM HOME!⌂",x+22,y+43,2)
  print("🅾️Z START",x+46,y+52,(flr(tm/5)%2==0)and 7 or 15)
  print("❎X HELP+OPTIONS",x+31,y+58,7)
  if easy then
    print("EASY MDDE",x+46,y+65,4)
  elseif hard then
    print("HARD MODE",x+46,y+65,4)
  end
  print("HUGEPING PRESENTS",30,0,15)
  print("v2.0",112,122)
end

function draw()
  clear(12)
  sky()
  scene(sx, sy)
  for v in all(frnds) do
    frndd(v)
  end
  for v in all(bals) do
    bald(v)
  end
  pld(plane)
  for v in all(birds) do
    birdd(v)
  end
  for v in all(exp) do
    expd(v)
  end
  for v in all(clds) do
    cldd(v)
  end
  for v in all(smks) do
    smkd(v)
  end
  hud()
  scene(sx,sy,89)
  if ending then
    local y=128-flr(ending/2)
    if (y<54)then y=54 end
    print("THE END!",50,y,7)
    if y==54 then
      local rank=0
      rank=rank+planes
      if (easy)then rank=ceil(rank/2) end
      if (hard)then rank=rank+3 end
      if (w_anch and e_anch)then rank=rank+1 end
      if (tricky)then rank=rank+1 end
      local off=flr((10*8-rank*8)/2)
      for i=1,rank do
        spr(flr((tm-i*4)/8)%2==0 and 169 or 174,
          17+off+i*8,y+20)
      end
      print("YOUR RANK",48,y+12,8)
    end
  end
  if title then
    spr(136,36,16,7,1)
    print("ADVENTURE",46,28,2)
    if options then
      opts(1,40)
    else
      help(1,40)
    end
  end
  if gameover then
    print("GAME OVER!",45,63,7)
  end
end

function run()
  while true do
    if sys.input() == 'quit' then
      dprint "quit"
      break
    end
    update_border()
    update()
    engine()
    if not gfx.framedrop() then
      draw()
    end
    flip(1/30)
  end
end

local main_mus = [[
@volume -1 0.25
@voice 1 square
@volume 2 0.10
@voice 2 violin
@volume 3 0.4
@voice 3 bass
@volume 4 0.2
@voice 4 zip
@temp 11
c-3 91 | ... .. | ... .. | ... ..
=== .. | ... .. | ... .. | ... ..
g-3 91 | ... .. | ... .. | ... ..
=== .. | ... .. | ... .. | ... ..
e-3 91 | ... .. | ... .. | ... ..
=== .. | ... .. | ... .. | ... ..
g-3 91 | ... .. | ... .. | ... ..
=== .. | ... .. | ... .. | ... ..
c-4 b6 | ... .. | ... .. | ... ..
=== .. | ... .. | ... .. | ... ..
g-3 b6 | ... .. | ... .. | ... ..
=== .. | ... .. | ... .. | ... ..
e-3 b6 | ... .. | ... .. | ... ..
=== .. | ... .. | ... .. | ... ..
g-3 b6 | ... .. | ... .. | ... ..
=== .. | ... .. | ... .. | ... ..
c-3 91 | ... .. | ... .. | ... ..
=== .. | ... .. | ... .. | ... ..
g-3 91 | ... .. | ... .. | ... ..
=== .. | ... .. | ... .. | ... ..
f-3 91 | ... .. | ... .. | ... ..
=== .. | ... .. | ... .. | ... ..
g-3 91 | ... .. | ... .. | ... ..
=== .. | ... .. | ... .. | ... ..
b-3 b6 | ... .. | ... .. | ... ..
=== .. | ... .. | ... .. | ... ..
g-3 b6 | ... .. | ... .. | ... ..
=== .. | ... .. | ... .. | ... ..
f-3 b6 | ... .. | ... .. | ... ..
=== .. | ... .. | ... .. | ... ..
g-3 b6 | ... .. | ... .. | ... ..
=== .. | ... .. | ... .. | ... ..
c-3 91 | c-3 b6 | ... .. | ... ..
=== .. | c-3 b6 | ... .. | ... ..
g-3 91 | c-3 b6 | ... .. | ... ..
=== .. | c-3 b6 | ... .. | ... ..
e-3 91 | c-3 b6 | ... .. | ... ..
=== .. | c-3 b6 | ... .. | ... ..
g-3 91 | c-3 b6 | ... .. | ... ..
=== .. | c-3 b6 | ... .. | ... ..
c-4 b6 | === .. | ... .. | ... ..
=== .. | === .. | ... .. | ... ..
g-3 b6 | === .. | ... .. | ... ..
=== .. | === .. | ... .. | ... ..
e-3 b6 | === .. | ... .. | ... ..
=== .. | === .. | ... .. | ... ..
g-3 b6 | === .. | ... .. | ... ..
=== .. | === .. | ... .. | ... ..
c-3 91 | d-3 b6 | ... .. | ... ..
=== .. | d-3 b6 | ... .. | ... ..
g-3 91 | d-3 b6 | ... .. | ... ..
=== .. | d-3 b6 | ... .. | ... ..
f-3 91 | d-3 b6 | ... .. | ... ..
=== .. | d-3 b6 | ... .. | ... ..
g-3 91 | d-3 b6 | ... .. | ... ..
=== .. | d-3 b6 | ... .. | ... ..
b-3 b6 | === .. | ... .. | ... ..
=== .. | === .. | ... .. | ... ..
g-3 b6 | === .. | ... .. | ... ..
=== .. | === .. | ... .. | ... ..
f-3 b6 | === .. | ... .. | ... ..
=== .. | === .. | ... .. | ... ..
g-3 b6 | === .. | ... .. | ... ..
=== .. | === .. | ... .. | ... ..
c-3 91 | g-3 b6 | ... .. | ... ..
=== .. | g-3 b6 | ... .. | ... ..
g-3 91 | g-3 b6 | ... .. | ... ..
=== .. | g-3 b6 | ... .. | ... ..
e-3 91 | g-3 b6 | ... .. | ... ..
=== .. | g-3 b6 | ... .. | ... ..
g-3 91 | g-3 b6 | ... .. | ... ..
=== .. | g-3 b6 | ... .. | ... ..
c-4 b6 | f-3 b6 | ... .. | ... ..
=== .. | f-3 b6 | ... .. | ... ..
g-3 b6 | f-3 b6 | ... .. | ... ..
=== .. | f-3 b6 | ... .. | ... ..
e-3 b6 | e-3 b6 | ... .. | ... ..
=== .. | e-3 b6 | ... .. | ... ..
g-3 b6 | e-3 b6 | ... .. | ... ..
=== .. | e-3 b6 | ... .. | ... ..
c-3 91 | d-3 b6 | ... .. | ... ..
=== .. | d-3 b6 | ... .. | ... ..
g-3 91 | d-3 b6 | ... .. | ... ..
=== .. | d-3 b6 | ... .. | ... ..
f-3 91 | d-3 b6 | ... .. | ... ..
=== .. | d-3 b6 | ... .. | ... ..
g-3 91 | d-3 b6 | ... .. | ... ..
=== .. | d-3 b6 | ... .. | ... ..
b-3 b6 | === .. | ... .. | ... ..
=== .. | === .. | ... .. | ... ..
g-3 b6 | === .. | ... .. | ... ..
=== .. | === .. | ... .. | ... ..
f-3 b6 | === .. | ... .. | ... ..
=== .. | === .. | ... .. | ... ..
g-3 b6 | === .. | ... .. | ... ..
=== .. | === .. | ... .. | ... ..
c-3 91 | e-3 b6 | ... .. | ... ..
=== .. | e-3 b6 | ... .. | ... ..
g-3 91 | e-3 b6 | ... .. | ... ..
=== .. | e-3 b6 | ... .. | ... ..
e-3 91 | e-3 b6 | ... .. | ... ..
=== .. | e-3 b6 | ... .. | ... ..
g-3 91 | e-3 b6 | ... .. | ... ..
=== .. | e-3 b6 | ... .. | ... ..
c-4 b6 | === .. | ... .. | ... ..
=== .. | === .. | ... .. | ... ..
g-3 b6 | === .. | ... .. | ... ..
=== .. | === .. | ... .. | ... ..
e-3 b6 | === .. | ... .. | ... ..
=== .. | === .. | ... .. | ... ..
g-3 b6 | === .. | ... .. | ... ..
=== .. | === .. | ... .. | ... ..
c-3 91 | f-3 b6 | ... .. | ... ..
=== .. | f-3 b6 | ... .. | ... ..
g-3 91 | f-3 b6 | ... .. | ... ..
=== .. | f-3 b6 | ... .. | ... ..
f-3 91 | f-3 b6 | ... .. | ... ..
=== .. | f-3 b6 | ... .. | ... ..
g-3 91 | f-3 b6 | ... .. | ... ..
=== .. | f-3 b6 | ... .. | ... ..
b-3 b6 | === .. | ... .. | ... ..
=== .. | === .. | ... .. | ... ..
g-3 b6 | === .. | ... .. | ... ..
=== .. | === .. | ... .. | ... ..
f-3 b6 | === .. | ... .. | ... ..
=== .. | === .. | ... .. | ... ..
g-3 b6 | === .. | ... .. | ... ..
=== .. | === .. | ... .. | ... ..
c-3 91 | g-3 b6 | ... .. | ... ..
=== .. | g-3 b6 | ... .. | ... ..
g-3 91 | g-3 b6 | ... .. | ... ..
=== .. | g-3 b6 | ... .. | ... ..
e-3 91 | g-3 b6 | ... .. | ... ..
=== .. | g-3 b6 | ... .. | ... ..
g-3 91 | g-3 b6 | ... .. | ... ..
=== .. | g-3 b6 | ... .. | ... ..
c-4 b6 | f-3 b6 | ... .. | ... ..
=== .. | f-3 b6 | ... .. | ... ..
g-3 b6 | f-3 b6 | ... .. | ... ..
=== .. | f-3 b6 | ... .. | ... ..
e-3 b6 | e-3 b6 | ... .. | ... ..
=== .. | e-3 b6 | ... .. | ... ..
g-3 b6 | e-3 b6 | ... .. | ... ..
=== .. | e-3 b6 | ... .. | ... ..
c-3 91 | f-3 b6 | ... .. | ... ..
=== .. | f-3 b6 | ... .. | ... ..
g-3 91 | f-3 b6 | ... .. | ... ..
=== .. | f-3 b6 | ... .. | ... ..
f-3 91 | f-3 b6 | ... .. | ... ..
=== .. | f-3 b6 | ... .. | ... ..
g-3 91 | f-3 b6 | ... .. | ... ..
=== .. | f-3 b6 | ... .. | ... ..
b-3 b6 | === .. | ... .. | ... ..
=== .. | === .. | ... .. | ... ..
g-3 b6 | === .. | ... .. | ... ..
=== .. | === .. | ... .. | ... ..
f-3 b6 | === .. | ... .. | ... ..
=== .. | === .. | ... .. | ... ..
g-3 b6 | === .. | ... .. | ... ..
=== .. | === .. | ... .. | ... ..
@push
c-3 91 | c-3 b6 | c-3 b6 | ... ..
=== .. | c-3 b6 | ... .. | ... ..
g-3 91 | c-3 b6 | ... .. | ... ..
=== .. | c-3 b6 | ... .. | ... ..
e-3 91 | c-3 b6 | ... .. | ... ..
=== .. | c-3 b6 | ... .. | ... ..
g-3 91 | c-3 b6 | ... .. | ... ..
=== .. | c-3 b6 | ... .. | ... ..
@voice 3 snare
c-4 b6 | === .. | d-4 48 | ... ..
=== .. | === .. | ... .. | ... ..
g-3 b6 | === .. | ... .. | ... ..
=== .. | === .. | ... .. | ... ..
e-3 b6 | === .. | c-4 48 | ... ..
=== .. | === .. | ... .. | ... ..
g-3 b6 | === .. | ... .. | ... ..
=== .. | === .. | ... .. | ... ..
@voice 3 bass
c-3 91 | d-3 b6 | c-3 b6 | ... ..
=== .. | d-3 b6 | === .. | ... ..
g-3 91 | d-3 b6 | === .. | ... ..
=== .. | d-3 b6 | === .. | ... ..
f-3 91 | d-3 b6 | === .. | ... ..
=== .. | d-3 b6 | === .. | ... ..
g-3 91 | d-3 b6 | === .. | ... ..
=== .. | d-3 b6 | === .. | ... ..
@voice 3 snare
b-3 b6 | === .. | d-4 48 | ... ..
=== .. | === .. | === .. | ... ..
g-3 b6 | === .. | === .. | ... ..
=== .. | === .. | === .. | ... ..
f-3 b6 | === .. | === .. | ... ..
=== .. | === .. | === .. | ... ..
g-3 b6 | === .. | === .. | ... ..
=== .. | === .. | === .. | ... ..
@voice 3 bass
c-3 91 | g-3 b6 | c-3 b6 | ... ..
=== .. | g-3 b6 | === .. | ... ..
g-3 91 | g-3 b6 | === .. | ... ..
=== .. | g-3 b6 | === .. | ... ..
e-3 91 | g-3 b6 | === .. | ... ..
=== .. | g-3 b6 | === .. | ... ..
g-3 91 | g-3 b6 | === .. | ... ..
=== .. | g-3 b6 | === .. | ... ..
@voice 3 snare
c-4 b6 | f-3 b6 | d-4 48 | ... ..
=== .. | f-3 b6 | === .. | ... ..
g-3 b6 | f-3 b6 | === .. | ... ..
=== .. | f-3 b6 | === .. | ... ..
e-3 b6 | e-3 b6 | c-4 48 | ... ..
=== .. | e-3 b6 | === .. | ... ..
g-3 b6 | e-3 b6 | === .. | ... ..
=== .. | e-3 b6 | === .. | ... ..
@voice 3 bass
c-3 91 | d-3 b6 | c-3 b6 | ... ..
=== .. | d-3 b6 | === .. | ... ..
g-3 91 | d-3 b6 | === .. | ... ..
=== .. | d-3 b6 | === .. | ... ..
f-3 91 | d-3 b6 | === .. | ... ..
=== .. | d-3 b6 | === .. | ... ..
g-3 91 | d-3 b6 | === .. | ... ..
=== .. | d-3 b6 | === .. | ... ..
@voice 3 snare
b-3 b6 | === .. | d-4 48 | ... ..
=== .. | === .. | === .. | ... ..
g-3 b6 | === .. | === .. | ... ..
=== .. | === .. | === .. | ... ..
f-3 b6 | === .. | === .. | ... ..
=== .. | === .. | === .. | ... ..
g-3 b6 | === .. | === .. | ... ..
=== .. | === .. | === .. | ... ..
@voice 3 bass
c-3 91 | e-3 b6 | c-3 b6 | ... ..
=== .. | e-3 b6 | === .. | ... ..
g-3 91 | e-3 b6 | === .. | ... ..
=== .. | e-3 b6 | === .. | ... ..
e-3 91 | e-3 b6 | === .. | ... ..
=== .. | e-3 b6 | === .. | ... ..
g-3 91 | e-3 b6 | === .. | ... ..
=== .. | e-3 b6 | === .. | ... ..
@voice 3 snare
c-4 b6 | === .. | d-4 48 | ... ..
=== .. | === .. | === .. | ... ..
g-3 b6 | === .. | === .. | ... ..
=== .. | === .. | === .. | ... ..
e-3 b6 | === .. | c-4 48 | ... ..
=== .. | === .. | === .. | ... ..
g-3 b6 | === .. | === .. | ... ..
=== .. | === .. | === .. | ... ..
@voice 3 bass
c-3 91 | f-3 b6 | c-3 b6 | ... ..
=== .. | f-3 b6 | === .. | ... ..
g-3 91 | f-3 b6 | === .. | ... ..
=== .. | f-3 b6 | === .. | ... ..
f-3 91 | f-3 b6 | === .. | ... ..
=== .. | f-3 b6 | === .. | ... ..
g-3 91 | f-3 b6 | === .. | ... ..
=== .. | f-3 b6 | === .. | ... ..
@voice 3 snare
b-3 b6 | === .. | d-4 48 | ... ..
=== .. | === .. | === .. | ... ..
g-3 b6 | === .. | === .. | ... ..
=== .. | === .. | === .. | ... ..
f-3 b6 | === .. | === .. | ... ..
=== .. | === .. | === .. | ... ..
g-3 b6 | === .. | === .. | ... ..
=== .. | === .. | === .. | ... ..
@voice 3 bass
c-3 91 | g-3 b6 | c-3 b6 | ... ..
=== .. | g-3 b6 | === .. | ... ..
g-3 91 | g-3 b6 | === .. | ... ..
=== .. | g-3 b6 | === .. | ... ..
e-3 91 | g-3 b6 | === .. | ... ..
=== .. | g-3 b6 | === .. | ... ..
g-3 91 | g-3 b6 | === .. | ... ..
=== .. | g-3 b6 | === .. | ... ..
@voice 3 snare
c-4 b6 | f-3 b6 | d-4 48 | ... ..
=== .. | f-3 b6 | === .. | ... ..
g-3 b6 | f-3 b6 | === .. | ... ..
=== .. | f-3 b6 | === .. | ... ..
e-3 b6 | e-3 b6 | c-4 48 | ... ..
=== .. | e-3 b6 | === .. | ... ..
g-3 b6 | e-3 b6 | === .. | ... ..
=== .. | e-3 b6 | === .. | ... ..
@voice 3 bass
c-3 91 | f-3 b6 | c-3 b6 | ... ..
=== .. | f-3 b6 | === .. | ... ..
g-3 91 | f-3 b6 | === .. | ... ..
=== .. | f-3 b6 | === .. | ... ..
f-3 91 | f-3 b6 | === .. | ... ..
=== .. | f-3 b6 | === .. | ... ..
g-3 91 | f-3 b6 | === .. | ... ..
=== .. | f-3 b6 | === .. | ... ..
@voice 3 snare
b-3 b6 | === .. | d-4 48 | ... ..
=== .. | === .. | === .. | ... ..
g-3 b6 | === .. | === .. | ... ..
=== .. | === .. | === .. | ... ..
f-3 b6 | === .. | === .. | ... ..
=== .. | === .. | === .. | ... ..
g-3 b6 | === .. | === .. | ... ..
=== .. | === .. | === .. | ... ..
@voice 3 bass
c-3 91 | ... .. | c-3 b6 | c-3 6d
=== .. | ... .. | === .. | c-3 00
g-3 91 | ... .. | === .. | f-3 00
=== .. | ... .. | === .. | d-3 00
e-3 91 | ... .. | === .. | e-3 00
=== .. | ... .. | === .. | e-3 00
g-3 91 | ... .. | === .. | f-3 6d
=== .. | ... .. | === .. | c-3 00
@voice 3 snare
c-4 b6 | ... .. | d-4 48 | d-3 6d
=== .. | ... .. | === .. | d-4 00
g-3 b6 | ... .. | === .. | f-3 00
=== .. | ... .. | === .. | === ..
e-3 b6 | ... .. | c-4 48 | e-3 00
=== .. | ... .. | === .. | === ..
g-3 b6 | ... .. | === .. | f-3 6d
=== .. | ... .. | === .. | === ..
@voice 3 bass
c-3 91 | ... .. | c-3 b6 | c-3 6d
=== .. | ... .. | === .. | === ..
g-3 91 | ... .. | === .. | f-3 6d
=== .. | ... .. | === .. | === ..
f-3 91 | ... .. | === .. | e-3 6d
=== .. | ... .. | === .. | === ..
g-3 91 | ... .. | === .. | f-3 6d
=== .. | ... .. | === .. | === ..
@voice 3 snare
b-3 b6 | ... .. | d-4 48 | d-3 6d
=== .. | ... .. | === .. | === ..
g-3 b6 | ... .. | === .. | f-3 00
=== .. | ... .. | === .. | === ..
f-3 b6 | ... .. | === .. | e-3 00
=== .. | ... .. | === .. | === ..
g-3 b6 | ... .. | === .. | f-3 00
=== .. | ... .. | === .. | === ..
@voice 3 bass
c-3 91 | ... .. | c-3 b6 | c-3 6d
=== .. | ... .. | === .. | c-3 00
g-3 91 | ... .. | === .. | f-3 00
=== .. | ... .. | === .. | d-3 00
e-3 91 | ... .. | === .. | e-3 00
=== .. | ... .. | === .. | e-3 00
g-3 91 | ... .. | === .. | f-3 6d
=== .. | ... .. | === .. | c-3 00
@voice 3 snare
c-4 b6 | ... .. | d-4 48 | d-3 6d
=== .. | ... .. | === .. | d-4 00
g-3 b6 | ... .. | === .. | f-3 00
=== .. | ... .. | === .. | === ..
e-3 b6 | ... .. | c-4 48 | e-3 00
=== .. | ... .. | === .. | === ..
g-3 b6 | ... .. | === .. | f-3 6d
=== .. | ... .. | === .. | === ..
@voice 3 bass
c-3 91 | ... .. | c-3 b6 | c-3 6d
=== .. | ... .. | === .. | === ..
g-3 91 | ... .. | === .. | f-3 6d
=== .. | ... .. | === .. | === ..
f-3 91 | ... .. | === .. | e-3 6d
=== .. | ... .. | === .. | === ..
g-3 91 | ... .. | === .. | f-3 6d
=== .. | ... .. | === .. | === ..
@voice 3 snare
b-3 b6 | ... .. | d-4 48 | d-3 6d
=== .. | ... .. | === .. | === ..
g-3 b6 | ... .. | === .. | f-3 00
=== .. | ... .. | === .. | === ..
f-3 b6 | ... .. | === .. | e-3 00
=== .. | ... .. | === .. | === ..
g-3 b6 | ... .. | === .. | f-3 00
=== .. | ... .. | === .. | === ..
@voice 3 bass
@pop
]]
mixer.new('main', main_mus)
init()
run()
